; Initial setup, either produces:
;  r0 = 0 => [0, 0, 1, 0, 875, 39]
;  r0 = 1 => [0, 0, 1, 0, 10551275, 10550400]
        0: jmp 17               addi 2 16 2   >INIT

START:  1: r1 <- 1              seti 1 1 1
LOOP1:  2: r3 <- 1              seti 1 4 3
LOOP2:  3: r5 <- r1 * r3        mulr 1 3 5
        4: r5 <- r5 == r4       eqrr 5 4 5  if r5 == r4 then >B1_1 else >B1_0
        5: jmp (r5 + 6)         addr 5 2 2
B1_0:   6: jmp 8                addi 2 1 2
B1_1:   7: r0 <- r1 + r0        addr 1 0 0
        8: r3 <- r3 + 1         addi 3 1 3
        9: r5 <- r3 > r4        gtrr 3 4 5  if r3 > r4 then >B2_1 else >B2_0
       10: jmp (r5 + 11)        addr 2 5 2
B2_0:  11: jmp 3                seti 2 4 2   >LOOP2
B2_1:  12: r1 <- r1 + 1         addi 1 1 1
       13: r5 <- r1 > r4        gtrr 1 4 5  if r1 > r4 then >B3_1 else >B3_0
       14: jmp (r5 + 15)        addr 5 2 2
B3_0:  15: jmp 2                seti 1 0 2   >LOOP1
B3_1:  16: jmp 257              mulr 2 2 2   HALT (off end of program)

       ; Setup for part 1
INIT:  17: r4 <- r4 + 2         addi 4 2 4      ; r4 = 2
       18: r4 <- r4 * r4        mulr 4 4 4      ; r4 = 4
       19: r4 <- 19 * r4        mulr 2 4 4      ; r4 = 76
       20: r4 <- r4 * 11        muli 4 11 4     ; r4 = 836
       21: r5 <- r5 + 1         addi 5 1 5      ; r5 = 1
       22: r5 <- r5 * 22        mulr 5 2 5      ; r5 = 22
       23: r5 <- r5 + 17        addi 5 17 5     ; r5 = 39
       24: r4 <- r4 + r5        addr 4 5 4      ; r4 = 875
       25: jmp (r0 + 26)        addr 2 0 2  if r0 then >B4_1 else >B4_0
B4_0:  26: jmp 1                seti 0 9 2  >START [0, 0, 1, 0, 875, 39]

       ; Only runs in part 2
B4_1:  27: r5 <- 27             setr 2 3 5      ; r5 = 27
       28: r5 <- r5 * 28        mulr 5 2 5      ; r5 = 756
       29: r5 <- 29 + r5        addr 2 5 5      ; r5 = 785
       30: r5 <- 30 * r5        mulr 2 5 5      ; r5 = 23550
       31: r5 <- r5 * 14        muli 5 14 5     ; r5 = 329700
       32: r5 <- r5 * 32        mulr 5 2 5      ; r5 = 10550400
       33: r4 <- r4 + r5        addr 4 5 4      ; r4 = 10551275
       34: r0 <- 0              seti 0 9 0      ; r0 = 0
       35: jmp 1                seti 0 6 2  >START [0, 0, 1, 0, 10551275, 10550400]

------------------------------------------------------------------------

; After setting r4 = 875 (if r0 = 0) or r4 = 10551275 (if r0 = 1):

r1 = 1

LOOP1:
r3 = 1

LOOP2:
r5 = r1 * r3

if ( r4 == r5 ) r0 = r1 + r0

r3 = r3 + 1
if ( r3 > r4 ) goto LOOP2
r1 = r1 + 1
if ( r1 > r4 ) goto LOOP1

HALT

------------------------------------------------------------------------

Which is approximately:

var r0 = 0
for ( r1 <- 1 to r4 )
  for ( r3 <- 1 to r4 )
    if ( r1 * r3 == r4 ) r0 += r1
